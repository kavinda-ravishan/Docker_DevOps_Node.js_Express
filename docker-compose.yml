version: "3"
services:
  nginx:
    image: nginx:stable-alpine
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    # ro : read only
  node-app:
    build: .
    environment:
      - PORT=3000
    depends_on:
      - mongo
  # create mongo container first and then node-app
  mongo:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    volumes:
      - mongo-db:/data/db # named volume
  redis:
    image: redis
volumes:
  mongo-db:
# Mongo
# Connect to mogo : $ docker exec -it bash
# $ mongo -u admin -p 3883
# or
# $ docker exec -it docker_devops_nodejs_express_mongo_1 mongo -u admin -p 3883
# >> db : show connected database
# >> use database_name : create and connect to new database
# >> show dbs : show all databaces (dbs least have 1 document)
# >> db.books.insert({"name":"book_name"}) : add new entry
# >> db.books.find() : show all entries
# >> exit : for logout

# Redis
# $ docker exec -it docker_devops_nodejs_express_redis_1 redis-cli
# KEYS * : for see all entries
# GET "sess:MV0ghOF33uqaSFtk7XbFYDIQqPaaMYDk" : GET "sess:session_key" for get information
